import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut } from "next-auth/react";

import { trpc } from "../utils/trpc";
import ChangeRoleFooter from "@components/Layout/ChangeRoleFooter";
import { useSession } from "@utils/useSession";

const Home: NextPage = () => {
  const hello = trpc.example.getAll.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container flex flex-col justify-center items-center p-4 mx-auto min-h-screen">
        <h1 className="text-5xl font-extrabold leading-normal text-gray-700 md:text-[5rem]">
          CEOS LOGO HERE
        </h1>
        <div className="flex justify-center items-center pt-6 w-full text-2xl text-blue-500">
          {hello.data ? <p>{hello.data}</p> : <p>Loading..</p>}
        </div>
        <AuthShowcase />
        <ChangeRoleFooter />
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col gap-2 justify-center items-center">
      {sessionData && (
        <p className="text-2xl text-blue-500">
          Logged in as {sessionData?.user?.name}
        </p>
      )}
      {secretMessage && (
        <p className="text-2xl text-blue-500">{secretMessage}</p>
      )}
      <button
        className="py-2 px-4 text-xl bg-violet-50 rounded-md border border-black shadow-lg hover:bg-violet-100"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
